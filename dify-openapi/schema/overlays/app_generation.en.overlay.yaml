overlay: 1.0.0
info:
  title: "English translation overlay for Dify API - Text Generation Application"
  version: "1.0.0"
extends: ../app_generation.zh.yaml
actions:
  - target: $.tags[0].description
    update: "Text Generation Application Operations"
  - target: $.info
    update:
      title: "Dify API - Text Generation Application"
      description: |
        Dify API provides a series of interfaces for text generation functionality.
        It supports text generation applications.
        All API requests require an application-level API-Key in the Authorization HTTP Header.
        official raw document: https://github.com/langgenius/dify/blob/1.2.0/web/app/components/develop/template/template.en.mdx

  - target: $.servers[0]
    update:
      description: "Dify API Server"

  - target: $.servers[1].variables.api_url
    update:
      description: "Custom API server URL"

  - target: $.components.responses.Error400.description
    update: "Request error"

  - target: $.components.responses.Error401.description
    update: "Non authorized or authentication failed"

  - target: $.components.responses.Error404.description
    update: "Resource not found"

  - target: $.components.responses.Error500.description
    update: "Server error"

  - target: $.components.schemas.Error.properties.code.description
    update: "Error code"

  - target: $.components.schemas.Error.properties.status.description
    update: "HTTP status code"

  - target: $.components.schemas.Error.properties.message.description
    update: "Error message description"

  - target: $.components.schemas.Usage.properties.prompt_tokens.description
    update: "Number of tokens used for prompts"

  - target: $.components.schemas.Usage.properties.completion_tokens.description
    update: "Number of tokens used for completion"

  - target: $.components.schemas.Usage.properties.total_tokens.description
    update: "Total number of tokens used"

  - target: $.components.schemas.Usage.properties.prompt_unit_price.description
    update: "Unit price for prompts"

  - target: $.components.schemas.Usage.properties.prompt_price_unit.description
    update: "Price unit for prompts"

  - target: $.components.schemas.Usage.properties.prompt_price.description
    update: "Total price for prompts"

  - target: $.components.schemas.Usage.properties.completion_unit_price.description
    update: "Unit price for completion"

  - target: $.components.schemas.Usage.properties.completion_price_unit.description
    update: "Price unit for completion"

  - target: $.components.schemas.Usage.properties.completion_price.description
    update: "Total price for completion"

  - target: $.components.schemas.Usage.properties.total_price.description
    update: "Total price"

  - target: $.components.schemas.Usage.properties.currency.description
    update: "Currency unit"

  - target: $.components.schemas.Usage.properties.latency.description
    update: "Latency time"

  - target: $.components.schemas.RetrieverResource.properties.position.description
    update: "Position"

  - target: $.components.schemas.RetrieverResource.properties.dataset_id.description
    update: "Dataset ID"

  - target: $.components.schemas.RetrieverResource.properties.dataset_name.description
    update: "Dataset name"

  - target: $.components.schemas.RetrieverResource.properties.document_id.description
    update: "Document ID"

  - target: $.components.schemas.RetrieverResource.properties.document_name.description
    update: "Document name"

  - target: $.components.schemas.RetrieverResource.properties.segment_id.description
    update: "Segment ID"

  - target: $.components.schemas.RetrieverResource.properties.score.description
    update: "Relevance score"

  - target: $.components.schemas.RetrieverResource.properties.content.description
    update: "Content"

  - target: $.components.schemas.BaseMessage.properties.message_id.description
    update: "Unique message ID"

  - target: $.components.schemas.BaseMessage.properties.created_at.description
    update: "Message creation timestamp"

  - target: $.components.schemas.CompletionMessage.allOf[1].properties.mode.description
    update: "App mode, fixed as completion"

  - target: $.components.schemas.CompletionMessage.allOf[1].properties.answer.description
    update: "Complete response content"

  - target: $.components.schemas.FileInput.properties.type.description
    update: "File type"

  - target: $.components.schemas.FileInput.properties.transfer_method.description
    update: "Transfer method"

  - target: $.components.schemas.FileInput.properties.url.description
    update: "Remote URL"

  - target: $.components.schemas.FileInput.properties.upload_file_id.description
    update: "Upload file ID"

  - target: $.components.schemas.StreamEvent.properties.event.description
    update: "Event type"

  - target: $.components.schemas.StreamEvent.properties.task_id.description
    update: "Task ID"

  - target: $.components.schemas.StreamEvent.properties.message_id.description
    update: "Unique message ID"

  - target: $.components.schemas.StreamEvent.properties.conversation_id.description
    update: "Conversation ID"

  - target: $.components.schemas.StreamEvent.properties.workflow_run_id.description
    update: "Workflow execution ID"

  - target: $.components.schemas.StreamEvent.properties.answer.description
    update: "Response content"

  - target: $.components.schemas.StreamEvent.properties.audio.description
    update: "Voice synthesis audio data (base64 encoded)"

  - target: $.components.schemas.StreamEvent.properties.data.description
    update: "Event related data"

  - target: $.components.schemas.StreamEvent.properties.metadata.properties.annotation_reply.description
    update: "Annotation reply information"

  - target: $.components.schemas.StreamEvent.properties.metadata.properties.annotation_reply.properties.id.description
    update: "Annotation ID"

  - target: $.components.schemas.StreamEvent.properties.metadata.properties.annotation_reply.properties.account.properties.id.description
    update: "Account ID"

  - target: $.components.schemas.StreamEvent.properties.metadata.properties.annotation_reply.properties.account.properties.name.description
    update: "Account name"

  - target: $.components.schemas.StreamEvent.properties.created_at.description
    update: "Creation timestamp"

  - target: $.components.schemas.StreamEvent.properties.status.description
    update: "HTTP status code"

  - target: $.components.schemas.StreamEvent.properties.code.description
    update: "Error code"

  - target: $.components.schemas.UploadedFile.properties.id.description
    update: "File ID"

  - target: $.components.schemas.UploadedFile.properties.name.description
    update: "File name"

  - target: $.components.schemas.UploadedFile.properties.size.description
    update: "File size (bytes)"

  - target: $.components.schemas.UploadedFile.properties.extension.description
    update: "File extension"

  - target: $.components.schemas.UploadedFile.properties.mime_type.description
    update: "File mime-type"

  - target: $.components.schemas.UploadedFile.properties.created_by.description
    update: "Uploader ID"

  - target: $.components.schemas.UploadedFile.properties.created_at.description
    update: "Upload time"

  - target: $.paths['/completion-messages'].post
    update:
      summary: "Send Message (Text Generation App)"
      description: "Send request to text generation application"

  - target: $.paths['/completion-messages'].post.requestBody.content['application/json'].schema.properties.inputs.properties.query
    update:
      description: "User input text content"

  - target: $.paths['/completion-messages'].post.requestBody.content['application/json'].schema.properties.response_mode
    update:
      description: |
        Response mode:
        - streaming: Streaming mode (recommended), implements typewriter-like output based on SSE
        - blocking: Blocking mode, returns result after execution is complete

  - target: $.paths['/completion-messages'].post.requestBody.content['application/json'].schema.properties.user
    update:
      description: "User identifier"

  - target: $.paths['/completion-messages'].post.responses['200'].description
    update: "Successful response"

  - target: $.paths['/files/upload'].post
    update:
      summary: "Upload File"
      description: |
        Upload files for use when sending messages.
        Supported file types depend on application type and configuration.
        Uploaded files are only available to the current end user.

  - target: $.paths['/files/upload'].post.requestBody.content['multipart/form-data'].schema.properties.file
    update:
      description: "File to upload"

  - target: $.paths['/files/upload'].post.requestBody.content['multipart/form-data'].schema.properties.user
    update:
      description: "User identifier"

  - target: $.paths['/files/upload'].post.responses['200'].description
    update: "Successful response"

  - target: $.paths['/files/upload'].post.responses['413'].description
    update: "File too large"

  - target: $.paths['/files/upload'].post.responses['415'].description
    update: "Unsupported file type"

  - target: $.paths['/files/upload'].post.responses['503'].description
    update: "Storage service error"

  - target: $.paths['/info'].get
    update:
      summary: "Get Application Basic Information"

  - target: $.paths['/info'].get.responses['200'].description
    update: "Successful response"

  - target: $.paths['/info'].get.responses['200'].content['application/json'].schema.properties.name
    update:
      description: "Application name"

  - target: $.paths['/info'].get.responses['200'].content['application/json'].schema.properties.description
    update:
      description: "Application description"

  - target: $.paths['/info'].get.responses['200'].content['application/json'].schema.properties.tags
    update:
      description: "Application tags"

  - target: $.paths['/parameters'].get
    update:
      summary: "Get Application Parameters"

  - target: $.paths['/parameters'].get.responses['200'].description
    update: "Successful response"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.opening_statement
    update:
      description: "Opening statement"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.suggested_questions
    update:
      description: "List of suggested opening questions"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.suggested_questions_after_answer
    update:
      description: "Settings for suggested questions after answer"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.speech_to_text
    update:
      description: "Audio to text settings"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.retriever_resource
    update:
      description: "Citation and attribution settings"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.annotation_reply
    update:
      description: "Annotation reply settings"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.annotation_reply.properties.enabled.description
    update: "Whether annotation reply is enabled"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.annotation_reply.properties.score_threshold.description
    update: "Similarity threshold"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.annotation_reply.properties.embedding_model.description
    update: "Embedding model"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.annotation_reply.properties.embedding_model_provider.description
    update: "Embedding model provider"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.user_input_form
    update:
      description: "User input form configuration"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.file_upload
    update:
      description: "File upload configuration"

  - target: $.paths['/parameters'].get.responses['200'].content['application/json'].schema.properties.system_parameters
    update:
      description: "System parameters"

  - target: $.paths['/meta'].get
    update:
      summary: "Get App Meta Information"
      description: "Used to get tool icons"

  - target: $.paths['/meta'].get.responses['200'].description
    update: "Successful response"

  - target: $.paths['/meta'].get.responses['200'].content['application/json'].schema.properties.tool_icons.description
    update: "Tool icons"

  - target: $.paths['/meta'].get.responses['200'].content['application/json'].schema.properties.tool_icons.additionalProperties.oneOf[0].properties.background.description
    update: "Background color in hex format"

  - target: $.paths['/meta'].get.responses['200'].content['application/json'].schema.properties.tool_icons.additionalProperties.oneOf[0].properties.content.description
    update: "Emoji"

  - target: $.paths['/meta'].get.responses['200'].content['application/json'].schema.properties.tool_icons.additionalProperties.oneOf[1].description
    update: "Icon URL"

  - target: $.paths['/completion-messages/{task_id}/stop'].post
    update:
      summary: "Stop Response"
      description: "Only supports streaming mode"

  - target: $.paths['/completion-messages/{task_id}/stop'].post.parameters[0].description
    update: "Task ID, can be obtained from the streaming response chunks"

  - target: $.paths['/completion-messages/{task_id}/stop'].post.requestBody.content['application/json'].schema.properties.user.description
    update: "User identifier, must be consistent with the user passed in the message sending interface"

  - target: $.paths['/completion-messages/{task_id}/stop'].post.responses['200'].description
    update: "Successfully stopped the response"

  - target: $.paths['/completion-messages/{task_id}/stop'].post.responses['200'].content['application/json'].schema.properties.result.description
    update: "Fixed return value 'success'"

  - target: $.paths['/messages/{message_id}/feedbacks'].post
    update:
      summary: "Message Feedback (Like/Dislike)"
      description: "End user feedback for messages, helps application developers optimize output expectations"

  - target: $.paths['/messages/{message_id}/feedbacks'].post.parameters[0].description
    update: "Message ID"

  - target: $.paths['/messages/{message_id}/feedbacks'].post.requestBody.content['application/json'].schema.properties.rating.description
    update: "Like (like), dislike (dislike), or cancel rating (null)"

  - target: $.paths['/messages/{message_id}/feedbacks'].post.requestBody.content['application/json'].schema.properties.user.description
    update: "User identifier, defined by developer rules, must be unique within the application"

  - target: $.paths['/messages/{message_id}/feedbacks'].post.requestBody.content['application/json'].schema.properties.content.description
    update: "Specific feedback information"

  - target: $.paths['/messages/{message_id}/feedbacks'].post.responses['200'].description
    update: "Successful response"

  - target: $.paths['/messages/{message_id}/feedbacks'].post.responses['200'].content['application/json'].schema.properties.result.description
    update: "Fixed return value 'success'"

  - target: $.paths['/text-to-audio'].post
    update:
      summary: "Text to Audio"
      description: "Convert text to speech"

  - target: $.paths['/text-to-audio'].post.requestBody.content['application/json'].schema.properties.message_id.description
    update: "Dify generated text message ID. The backend will find the corresponding content directly through the message_id to synthesize speech. If both message_id and text are provided, message_id takes precedence"

  - target: $.paths['/text-to-audio'].post.requestBody.content['application/json'].schema.properties.text.description
    update: "Text content for speech generation. If message_id is not provided, this field will be used"

  - target: $.paths['/text-to-audio'].post.requestBody.content['application/json'].schema.properties.user.description
    update: "User identifier, defined by developer rules, must be unique within the application"

  - target: $.paths['/text-to-audio'].post.responses['200'].description
    update: "Successful response"

  - target: $.paths['/text-to-audio'].post.responses['200'].content['audio/wav'].schema.description
    update: "Audio file"

  - target: $.paths['/apps/annotations'].get
    update:
      summary: "Get Annotation List"
      description: "Get the list of annotations for the application"

  - target: $.paths['/apps/annotations'].get.parameters[0].description
    update: "Page number"

  - target: $.paths['/apps/annotations'].get.parameters[1].description
    update: "Items per page"

  - target: $.paths['/apps/annotations'].get.responses['200'].description
    update: "Successfully retrieved annotation list"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.data.items.properties.id.description
    update: "Annotation ID"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.data.items.properties.question.description
    update: "Question"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.data.items.properties.answer.description
    update: "Answer"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.data.items.properties.hit_count.description
    update: "Hit count"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.data.items.properties.created_at.description
    update: "Creation timestamp"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.has_more.description
    update: "Whether there is more data"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.limit.description
    update: "Items per page"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.total.description
    update: "Total record count"

  - target: $.paths['/apps/annotations'].get.responses['200'].content['application/json'].schema.properties.page.description
    update: "Current page number"

  - target: $.paths['/apps/annotations'].post
    update:
      summary: "Create Annotation"
      description: "Create a new annotation"

  - target: $.paths['/apps/annotations'].post.requestBody.content['application/json'].schema.properties.question.description
    update: "Question"

  - target: $.paths['/apps/annotations'].post.requestBody.content['application/json'].schema.properties.answer.description
    update: "Answer"

  - target: $.paths['/apps/annotations'].post.responses['200'].description
    update: "Successfully created annotation"

  - target: $.paths['/apps/annotations'].post.responses['200'].content['application/json'].schema.properties.id.description
    update: "Annotation ID"

  - target: $.paths['/apps/annotations'].post.responses['200'].content['application/json'].schema.properties.question.description
    update: "Question"

  - target: $.paths['/apps/annotations'].post.responses['200'].content['application/json'].schema.properties.answer.description
    update: "Answer"

  - target: $.paths['/apps/annotations'].post.responses['200'].content['application/json'].schema.properties.hit_count.description
    update: "Hit count"

  - target: $.paths['/apps/annotations'].post.responses['200'].content['application/json'].schema.properties.created_at.description
    update: "Creation timestamp"

  - target: $.paths['/apps/annotations/{annotation_id}'].put
    update:
      summary: "Update Annotation"
      description: "Update a specific annotation"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.parameters[0].description
    update: "Annotation ID"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.requestBody.content['application/json'].schema.properties.question.description
    update: "Question"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.requestBody.content['application/json'].schema.properties.answer.description
    update: "Answer"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.responses['200'].description
    update: "Successfully updated annotation"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.responses['200'].content['application/json'].schema.properties.id.description
    update: "Annotation ID"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.responses['200'].content['application/json'].schema.properties.question.description
    update: "Question"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.responses['200'].content['application/json'].schema.properties.answer.description
    update: "Answer"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.responses['200'].content['application/json'].schema.properties.hit_count.description
    update: "Hit count"

  - target: $.paths['/apps/annotations/{annotation_id}'].put.responses['200'].content['application/json'].schema.properties.created_at.description
    update: "Creation timestamp"

  - target: $.paths['/apps/annotations/{annotation_id}'].delete
    update:
      summary: "Delete Annotation"
      description: "Delete a specific annotation"

  - target: $.paths['/apps/annotations/{annotation_id}'].delete.parameters[0].description
    update: "Annotation ID"

  - target: $.paths['/apps/annotations/{annotation_id}'].delete.responses['200'].description
    update: "Successfully deleted annotation"

  - target: $.paths['/apps/annotation-reply/{action}'].post
    update:
      summary: "Initialize Annotation Reply Settings"
      description: "Enable or disable annotation reply functionality"

  - target: $.paths['/apps/annotation-reply/{action}'].post.parameters[0].description
    update: "Action, can only be 'enable' or 'disable'"

  - target: $.paths['/apps/annotation-reply/{action}'].post.requestBody.content['application/json'].schema.properties.embedding_model_provider.description
    update: "Specified embedding model provider, must be configured in the system first, corresponds to the provider field"

  - target: $.paths['/apps/annotation-reply/{action}'].post.requestBody.content['application/json'].schema.properties.embedding_model.description
    update: "Specified embedding model, corresponds to the model field"

  - target: $.paths['/apps/annotation-reply/{action}'].post.requestBody.content['application/json'].schema.properties.score_threshold.description
    update: "Similarity score threshold, when similarity is greater than this threshold, the system will automatically reply, otherwise it will not reply"

  - target: $.paths['/apps/annotation-reply/{action}'].post.responses['200'].description
    update: "Successfully enabled or disabled annotation reply"

  - target: $.paths['/apps/annotation-reply/{action}'].post.responses['200'].content['application/json'].schema.properties.job_id.description
    update: "Job ID"

  - target: $.paths['/apps/annotation-reply/{action}'].post.responses['200'].content['application/json'].schema.properties.job_status.description
    update: "Job status"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get
    update:
      summary: "Check Annotation Reply Settings Status"
      description: "Query the status of annotation reply initialization task"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get.parameters[0].description
    update: "Action, can only be 'enable' or 'disable', and must be consistent with the action in the annotation reply initialization interface"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get.parameters[1].description
    update: "Job ID, returned from the annotation reply initialization interface"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get.responses['200'].description
    update: "Successfully retrieved job status"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get.responses['200'].content['application/json'].schema.properties.job_id.description
    update: "Job ID"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get.responses['200'].content['application/json'].schema.properties.job_status.description
    update: "Job status"

  - target: $.paths['/apps/annotation-reply/{action}/status/{job_id}'].get.responses['200'].content['application/json'].schema.properties.error_msg.description
    update: "Error message"