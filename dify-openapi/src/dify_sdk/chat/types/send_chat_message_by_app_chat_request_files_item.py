# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .send_chat_message_by_app_chat_request_files_item_transfer_method import (
    SendChatMessageByAppChatRequestFilesItemTransferMethod,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SendChatMessageByAppChatRequestFilesItem(UniversalBaseModel):
    type: typing.Optional[typing.Literal["image"]] = pydantic.Field(default=None)
    """
    Supported type: image (currently only supports image formats)
    """

    transfer_method: typing.Optional[SendChatMessageByAppChatRequestFilesItemTransferMethod] = pydantic.Field(
        default=None
    )
    """
    Transfer method
    """

    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    Image URL (only when transfer_method is remote_url)
    """

    upload_file_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Upload file ID (only when transfer_method is local_file)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
