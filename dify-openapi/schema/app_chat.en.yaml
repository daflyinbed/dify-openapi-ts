openapi: 3.0.0
info:
  title: Dify API - Chat Application
  description: |
    Dify API provides a series of interfaces for conversation functionality.
    It supports conversational applications.
    All API requests require an application-level API-Key in the Authorization HTTP Header.
    official raw document: https://github.com/langgenius/dify/blob/1.2.0/web/app/components/develop/template/template_chat.en.mdx
  version: 1.2.0
servers:
  - url: 'https://api.dify.ai/v1'
    description: Dify API Server
  - url: '{api_url}'
    variables:
      api_url:
        default: 'https://api.dify.ai/v1'
        description: Custom API server URL
  - url: 'http://ai.urchinet.lan/v1'
    description: author of dify-openapi dev server
security:
  - bearerApiKeyAuth: []
components:
  securitySchemes:
    bearerApiKeyAuth:
      type: http
      scheme: bearer
  responses:
    Error400:
      description: Request error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error401:
      description: Non authorized or authentication failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error404:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error500:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Error message description
      required:
        - code
        - status
        - message
    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          description: Number of tokens used for prompts
        completion_tokens:
          type: integer
          description: Number of tokens used for completion
        total_tokens:
          type: integer
          description: Total number of tokens used
        prompt_unit_price:
          type: string
          description: Unit price for prompts
        prompt_price_unit:
          type: string
          description: Price unit for prompts
        prompt_price:
          type: string
          description: Total price for prompts
        completion_unit_price:
          type: string
          description: Unit price for completion
        completion_price_unit:
          type: string
          description: Price unit for completion
        completion_price:
          type: string
          description: Total price for completion
        total_price:
          type: string
          description: Total price
        currency:
          type: string
          description: Currency unit
        latency:
          type: number
          description: Latency time
    RetrieverResource:
      type: object
      properties:
        position:
          type: integer
          description: Position
        dataset_id:
          type: string
          description: Dataset ID
        dataset_name:
          type: string
          description: Dataset name
        document_id:
          type: string
          description: Document ID
        document_name:
          type: string
          description: Document name
        segment_id:
          type: string
          description: Segment ID
        score:
          type: number
          description: Relevance score
        content:
          type: string
          description: Content
    BaseMessage:
      type: object
      properties:
        message_id:
          type: string
          description: Unique message ID
        created_at:
          type: integer
          description: Message creation timestamp
        metadata:
          type: object
          properties:
            usage:
              $ref: '#/components/schemas/Usage'
            retriever_resources:
              type: array
              items:
                $ref: '#/components/schemas/RetrieverResource'
    ChatMessage:
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - type: object
          properties:
            conversation_id:
              type: string
              description: Conversation ID
            mode:
              type: string
              description: 'App mode, fixed as chat'
            answer:
              type: string
              description: Complete response content
    Conversation:
      type: object
      properties:
        id:
          type: string
          description: Conversation ID
        name:
          type: string
          description: Conversation name
        inputs:
          type: object
          description: User input parameters
        status:
          type: string
          description: Conversation status
        introduction:
          type: string
          description: Opening statement
        created_at:
          type: integer
          description: Creation time
        updated_at:
          type: integer
          description: Update time
    FileInput:
      type: object
      properties:
        type:
          type: string
          enum:
            - document
            - image
            - audio
            - video
            - custom
          description: File type
        transfer_method:
          type: string
          enum:
            - remote_url
            - local_file
          description: Transfer method
        url:
          type: string
          description: Remote URL
        upload_file_id:
          type: string
          description: Upload file ID
    StreamEvent:
      type: object
      properties:
        event:
          type: string
          enum:
            - message
            - message_end
            - tts_message
            - tts_message_end
            - message_replace
            - error
            - ping
            - workflow_started
            - node_started
            - node_finished
            - workflow_finished
            - agent_message
            - agent_thought
            - message_file
          description: Event type
        task_id:
          type: string
          description: Task ID for request tracking and stopping responses
        message_id:
          type: string
          description: Unique message ID
        conversation_id:
          type: string
          description: Conversation ID
        workflow_run_id:
          type: string
          description: Workflow execution ID
        answer:
          type: string
          description: Response content
        audio:
          type: string
          description: Voice synthesis audio data (base64 encoded)
        data:
          type: object
          description: Event related data
        metadata:
          type: object
          properties:
            usage:
              $ref: '#/components/schemas/Usage'
            retriever_resources:
              type: array
              items:
                $ref: '#/components/schemas/RetrieverResource'
        created_at:
          type: integer
          description: Creation timestamp
        id:
          type: string
          description: Unique ID
        position:
          type: integer
          description: Position of agent_thought in the message
        thought:
          type: string
          description: Agent's thinking content
        observation:
          type: string
          description: Return result of tool call
        tool:
          type: string
          description: 'List of tools used, multiple tools separated by ;'
        tool_input:
          type: string
          description: 'Tool input, JSON format string'
        message_files:
          type: array
          items:
            type: string
          description: File IDs associated with the current agent_thought
        type:
          type: string
          description: File type
        belongs_to:
          type: string
          description: 'File ownership, user or assistant'
        url:
          type: string
          description: File access URL
    UploadedFile:
      type: object
      properties:
        id:
          type: string
          description: File ID
        name:
          type: string
          description: File name
        size:
          type: integer
          description: File size (bytes)
        extension:
          type: string
          description: File extension
        mime_type:
          type: string
          description: File mime-type
        created_by:
          type: string
          description: Uploader ID
        created_at:
          type: integer
          description: Upload time
tags:
  - name: Chat
    description: Chat Application Operations
paths:
  /chat-messages:
    post:
      tags:
        - Chat
      operationId: sendChatMessageByAppChat
      summary: Send Chat Message (Conversational App)
      description: Create conversation message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: User input/question content
                inputs:
                  type: object
                  description: 'Allows passing values for variables defined by the App. The inputs parameter contains multiple key/value pairs, where each key corresponds to a specific variable and each value is the value for that variable. Default {}'
                response_mode:
                  type: string
                  enum:
                    - streaming
                    - blocking
                  description: |
                    Response mode:
                    - streaming: Streaming mode (recommended), implements typewriter-like output based on SSE
                    - blocking: Blocking mode, returns result after execution is complete (request may be interrupted if the process is too long)
                    Note: Blocking mode is not allowed in Agent mode
                user:
                  type: string
                  description: 'User identifier for defining end user identity, facilitating retrieval and statistics. Defined by developer rules, must be unique within the application.'
                conversation_id:
                  type: string
                  description: '(Optional) Conversation ID. Required when continuing a conversation based on previous chat history, must pass the conversation_id from previous messages'
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - image
                        description: 'Supported type: image (currently only supports image formats)'
                      transfer_method:
                        type: string
                        enum:
                          - remote_url
                          - local_file
                        description: Transfer method
                      url:
                        type: string
                        description: Image URL (only when transfer_method is remote_url)
                      upload_file_id:
                        type: string
                        description: Upload file ID (only when transfer_method is local_file)
                  description: Uploaded files
                auto_generate_name:
                  type: boolean
                  description: '(Optional) Whether to automatically generate title, default is true. If set to false, you can call the conversation rename interface and set auto_generate to true to generate a title asynchronously.'
                  default: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
                description: 'When response_mode is blocking, returns a ChatCompletionResponse object'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/StreamEvent'
                description: 'When response_mode is streaming, returns a ChunkChatCompletionResponse object stream sequence'
        '400':
          $ref: '#/components/responses/Error400'
        '404':
          $ref: '#/components/responses/Error404'
        '500':
          $ref: '#/components/responses/Error500'
  /conversations:
    get:
      tags:
        - Chat
      operationId: getConversationListByAppChat
      summary: Get Conversation List
      description: Get conversation list for current user
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: User identifier
        - name: last_id
          in: query
          schema:
            type: string
          description: ID of the last record on current page
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Records per page
        - name: sort_by
          in: query
          schema:
            type: string
            enum:
              - created_at
              - '-created_at'
              - updated_at
              - '-updated_at'
            default: '-updated_at'
          description: Sort field
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'
                  has_more:
                    type: boolean
                  limit:
                    type: integer
  '/conversations/{conversation_id}':
    delete:
      tags:
        - Chat
      operationId: deleteConversationByAppChat
      summary: Delete Conversation
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
          description: Conversation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
  '/conversations/{conversation_id}/name':
    post:
      tags:
        - Chat
      operationId: renameConversationByAppChat
      summary: Rename Conversation
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                name:
                  type: string
                  description: New name
                auto_generate:
                  type: boolean
                  default: false
                  description: Whether to automatically generate
                user:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
  /messages:
    get:
      tags:
        - Chat
      operationId: getConversationMessagesByAppChat
      summary: Get Conversation History Messages
      parameters:
        - name: conversation_id
          in: query
          required: true
          schema:
            type: string
          description: Conversation ID
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: User identifier
        - name: first_id
          in: query
          schema:
            type: string
          description: First message ID
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Limit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatMessage'
                  has_more:
                    type: boolean
                  limit:
                    type: integer
  '/messages/{message_id}/feedbacks':
    post:
      tags:
        - Chat
      operationId: sendMessageFeedbackByAppChat
      summary: Message Feedback
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
          description: Message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - user
              properties:
                rating:
                  type: string
                  enum:
                    - like
                    - dislike
                    - null
                  description: Feedback type
                user:
                  type: string
                  description: User identifier
                content:
                  type: string
                  description: Feedback content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
  '/messages/{message_id}/suggested':
    get:
      tags:
        - Chat
      operationId: getSuggestedQuestionsByAppChat
      summary: Get Suggested Questions
      description: Get suggested questions for the next round
      parameters:
        - name: message_id
          in: path
          description: Message ID
          required: true
          schema:
            type: string
        - name: user
          in: query
          description: 'User identifier, defined by the developer, must be unique within the application'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved suggested questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: Fixed return value 'success'
                  data:
                    type: array
                    description: List of suggested questions
                    items:
                      type: string
  /files/upload:
    post:
      tags:
        - Chat
      operationId: uploadFileByAppChat
      summary: Upload File
      description: |
        Upload files for use when sending messages.
        Supported file types depend on application type and configuration.
        Uploaded files are only available to the current end user.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
                user:
                  type: string
                  description: User identifier
              required:
                - file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedFile'
        '400':
          $ref: '#/components/responses/Error400'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Unsupported file type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Storage service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /info:
    get:
      tags:
        - Chat
      operationId: getApplicationInfoByAppChat
      summary: Get Application Basic Information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Application name
                  description:
                    type: string
                    description: Application description
                  tags:
                    type: array
                    items:
                      type: string
                    description: Application tags
  '/chat-messages/{task_id}/stop':
    post:
      tags:
        - Chat
      operationId: stopChatResponseByAppChat
      summary: Stop Response
      description: Only supports streaming mode
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
          description: 'Task ID, can be obtained from the streaming response chunks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: 'User identifier, must be consistent with the user passed in the message sending interface'
      responses:
        '200':
          description: Successfully stopped the response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
                    description: Fixed return value 'success'
  /audio-to-text:
    post:
      tags:
        - Chat
      operationId: convertAudioToTextByAppChat
      summary: Audio to Text
      description: Convert audio to text
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Audio file
                user:
                  type: string
                  description: User identifier
              required:
                - file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: Converted text
  /text-to-audio:
    post:
      tags:
        - Chat
      operationId: convertTextToAudioByAppChat
      summary: Text to Audio
      description: Convert text to speech
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message_id:
                  type: string
                  description: 'Dify generated text message ID. The backend will find the corresponding content directly through the message_id to synthesize speech. If both message_id and text are provided, message_id takes precedence'
                text:
                  type: string
                  description: 'Text content for speech generation. If message_id is not provided, this field will be used'
                user:
                  type: string
                  description: 'User identifier, defined by developer rules, must be unique within the application'
      responses:
        '200':
          description: Successful response
          content:
            audio/wav:
              schema:
                type: string
                format: binary
                description: Audio file
  /parameters:
    get:
      tags:
        - Chat
      operationId: getApplicationParametersByAppChat
      summary: Get Application Parameters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  opening_statement:
                    type: string
                    description: Opening statement
                  suggested_questions:
                    type: array
                    items:
                      type: string
                    description: List of suggested opening questions
                  suggested_questions_after_answer:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: Settings for suggested questions after answer
                  speech_to_text:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: Audio to text settings
                  retriever_resource:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: Citation and attribution settings
                  user_input_form:
                    type: array
                    items:
                      type: object
                    description: User input form configuration
                  file_upload:
                    type: object
                    description: File upload configuration
                  system_parameters:
                    type: object
                    description: System parameters
  /meta:
    get:
      tags:
        - Chat
      operationId: getAppMetaInfoByAppChat
      summary: Get App Meta Information
      description: Used to get tool icons
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  tool_icons:
                    type: object
                    description: Tool icons
                    additionalProperties:
                      oneOf:
                        - type: object
                          properties:
                            background:
                              type: string
                              description: Background color in hex format
                            content:
                              type: string
                              description: Emoji
                        - type: string
                          description: Icon URL
  /apps/annotations:
    get:
      tags:
        - Chat
      operationId: getAnnotationsListByAppChat
      summary: Get Annotation List
      description: Get the list of annotations for the application
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved annotation list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Annotation ID
                        question:
                          type: string
                          description: Question
                        answer:
                          type: string
                          description: Answer
                        hit_count:
                          type: integer
                          description: Hit count
                        created_at:
                          type: integer
                          description: Creation timestamp
                  has_more:
                    type: boolean
                    description: Whether there is more data
                  limit:
                    type: integer
                    description: Items per page
                  total:
                    type: integer
                    description: Total record count
                  page:
                    type: integer
                    description: Current page number
    post:
      tags:
        - Chat
      operationId: createAnnotationByAppChat
      summary: Create Annotation
      description: Create a new annotation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
              properties:
                question:
                  type: string
                  description: Question
                answer:
                  type: string
                  description: Answer
      responses:
        '200':
          description: Successfully created annotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Annotation ID
                  question:
                    type: string
                    description: Question
                  answer:
                    type: string
                    description: Answer
                  hit_count:
                    type: integer
                    description: Hit count
                  created_at:
                    type: integer
                    description: Creation timestamp
  '/apps/annotations/{annotation_id}':
    put:
      tags:
        - Chat
      operationId: updateAnnotationByAppChat
      summary: Update Annotation
      description: Update a specific annotation
      parameters:
        - name: annotation_id
          in: path
          description: Annotation ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
              properties:
                question:
                  type: string
                  description: Question
                answer:
                  type: string
                  description: Answer
      responses:
        '200':
          description: Successfully updated annotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Annotation ID
                  question:
                    type: string
                    description: Question
                  answer:
                    type: string
                    description: Answer
                  hit_count:
                    type: integer
                    description: Hit count
                  created_at:
                    type: integer
                    description: Creation timestamp
    delete:
      tags:
        - Chat
      operationId: deleteAnnotationByAppChat
      summary: Delete Annotation
      description: Delete a specific annotation
      parameters:
        - name: annotation_id
          in: path
          description: Annotation ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted annotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
  '/apps/annotation-reply/{action}':
    post:
      tags:
        - Chat
      operationId: configureAnnotationReplyByAppChat
      summary: Initialize Annotation Reply Settings
      description: Enable or disable annotation reply functionality
      parameters:
        - name: action
          in: path
          description: 'Action, can only be ''enable'' or ''disable'''
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                embedding_model_provider:
                  type: string
                  description: 'Specified embedding model provider, must be configured in the system first, corresponds to the provider field'
                embedding_model:
                  type: string
                  description: 'Specified embedding model, corresponds to the model field'
                score_threshold:
                  type: number
                  description: 'Similarity score threshold, when similarity is greater than this threshold, the system will automatically reply, otherwise it will not reply'
      responses:
        '200':
          description: Successfully enabled or disabled annotation reply
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: Job ID
                  job_status:
                    type: string
                    description: Job status
  '/apps/annotation-reply/{action}/status/{job_id}':
    get:
      tags:
        - Chat
      operationId: getAnnotationReplyStatusByAppChat
      summary: Check Annotation Reply Settings Status
      description: Query the status of annotation reply initialization task
      parameters:
        - name: action
          in: path
          description: 'Action, can only be ''enable'' or ''disable'', and must be consistent with the action in the annotation reply initialization interface'
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
        - name: job_id
          in: path
          description: 'Job ID, returned from the annotation reply initialization interface'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved job status
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: Job ID
                  job_status:
                    type: string
                    description: Job status
                  error_msg:
                    type: string
                    description: Error message

