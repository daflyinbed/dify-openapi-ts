# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .get_app_parameters_response_user_input_form_item_text_input import (
    GetAppParametersResponseUserInputFormItemTextInput,
)
from ...core.serialization import FieldMetadata
import pydantic
from .get_app_parameters_response_user_input_form_item_paragraph import (
    GetAppParametersResponseUserInputFormItemParagraph,
)
from .get_app_parameters_response_user_input_form_item_select import (
    GetAppParametersResponseUserInputFormItemSelect,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class GetAppParametersResponseUserInputFormItem(UniversalBaseModel):
    text_input: typing_extensions.Annotated[
        typing.Optional[GetAppParametersResponseUserInputFormItemTextInput],
        FieldMetadata(alias="text-input"),
    ] = pydantic.Field(default=None)
    """
    Text input control
    """

    paragraph: typing.Optional[GetAppParametersResponseUserInputFormItemParagraph] = pydantic.Field(default=None)
    """
    Paragraph text input control
    """

    select: typing.Optional[GetAppParametersResponseUserInputFormItemSelect] = pydantic.Field(default=None)
    """
    Dropdown control
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
