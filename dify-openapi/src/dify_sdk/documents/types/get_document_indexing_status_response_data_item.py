# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GetDocumentIndexingStatusResponseDataItem(UniversalBaseModel):
    id: typing.Optional[str] = None
    indexing_status: typing.Optional[str] = None
    processing_started_at: typing.Optional[float] = None
    parsing_completed_at: typing.Optional[float] = None
    cleaning_completed_at: typing.Optional[float] = None
    splitting_completed_at: typing.Optional[float] = None
    completed_at: typing.Optional[float] = None
    paused_at: typing.Optional[float] = None
    error: typing.Optional[str] = None
    stopped_at: typing.Optional[float] = None
    completed_segments: typing.Optional[int] = None
    total_segments: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
