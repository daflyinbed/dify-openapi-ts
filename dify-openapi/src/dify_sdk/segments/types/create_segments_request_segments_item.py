# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class CreateSegmentsRequestSegmentsItem(UniversalBaseModel):
    content: str = pydantic.Field()
    """
    Text content/question content
    """

    answer: typing.Optional[str] = pydantic.Field(default=None)
    """
    Answer content, optional, required if knowledge base is in Q&A mode
    """

    keywords: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Keyword list, optional
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
