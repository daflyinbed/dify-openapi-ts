openapi: 3.0.0
info:
  title: Dify API - 对话型应用
  description: |
    Dify API 提供了一系列接口用于对话功能。
    支持对话型应用。
    所有 API 请求都需要在 Authorization HTTP Header 中包含应用级 API-Key。
    官方原始文档见: https://github.com/langgenius/dify/blob/1.2.0/web/app/components/develop/template/template_chat.zh.mdx
  version: 1.2.0

servers:
  - url: https://api.dify.ai/v1
    description: Dify API 服务器

  - url: "{api_url}"
    variables:
      api_url:
        default: https://api.dify.ai/v1
        description: 自定义 API 服务器 URL

  - url: http://ai.urchinet.lan/v1
    description: author of dify-openapi dev server

security:
  - bearerApiKeyAuth: []

components:
  securitySchemes:
    bearerApiKeyAuth:
      type: http
      scheme: bearer

  responses:
    Error400:
      description: 请求错误
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Error401:
      description: 未授权或授权失败
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Error404:
      description: 资源不存在
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Error500:
      description: 服务器错误
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: 错误代码
        status:
          type: integer
          description: HTTP 状态码
        message:
          type: string
          description: 错误信息描述
      required:
        - code
        - status
        - message

    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          description: 提示词使用的 token 数量
        completion_tokens:
          type: integer
          description: 补全使用的 token 数量
        total_tokens:
          type: integer
          description: 总共使用的 token 数量
        prompt_unit_price:
          type: string
          description: 提示词单价
        prompt_price_unit:
          type: string
          description: 提示词价格单位
        prompt_price:
          type: string
          description: 提示词总价
        completion_unit_price:
          type: string
          description: 补全单价
        completion_price_unit:
          type: string
          description: 补全价格单位
        completion_price:
          type: string
          description: 补全总价
        total_price:
          type: string
          description: 总价格
        currency:
          type: string
          description: 货币单位
        latency:
          type: number
          description: 延迟时间

    RetrieverResource:
      type: object
      properties:
        position:
          type: integer
          description: 位置
        dataset_id:
          type: string
          description: 数据集ID
        dataset_name:
          type: string
          description: 数据集名称
        document_id:
          type: string
          description: 文档ID
        document_name:
          type: string
          description: 文档名称
        segment_id:
          type: string
          description: 分段ID
        score:
          type: number
          description: 相关度分数
        content:
          type: string
          description: 内容

    BaseMessage:
      type: object
      properties:
        message_id:
          type: string
          description: 消息唯一 ID
        created_at:
          type: integer
          description: 消息创建时间戳
        metadata:
          type: object
          properties:
            usage:
              $ref: "#/components/schemas/Usage"
            retriever_resources:
              type: array
              items:
                $ref: "#/components/schemas/RetrieverResource"

    ChatMessage:
      allOf:
        - $ref: "#/components/schemas/BaseMessage"
        - type: object
          properties:
            conversation_id:
              type: string
              description: 会话ID
            mode:
              type: string
              description: App 模式，固定为 chat
            answer:
              type: string
              description: 完整回复内容

    Conversation:
      type: object
      properties:
        id:
          type: string
          description: 会话 ID
        name:
          type: string
          description: 会话名称
        inputs:
          type: object
          description: 用户输入参数
        status:
          type: string
          description: 会话状态
        introduction:
          type: string
          description: 开场白
        created_at:
          type: integer
          description: 创建时间
        updated_at:
          type: integer
          description: 更新时间

    FileInput:
      type: object
      properties:
        type:
          type: string
          enum: [document, image, audio, video, custom]
          description: 文件类型
        transfer_method:
          type: string
          enum: [remote_url, local_file]
          description: 传递方式
        url:
          type: string
          description: 远程URL
        upload_file_id:
          type: string
          description: 上传文件ID

    StreamEvent:
      type: object
      properties:
        event:
          type: string
          enum:
            [
              message,
              message_end,
              tts_message,
              tts_message_end,
              message_replace,
              error,
              ping,
              workflow_started,
              node_started,
              node_finished,
              workflow_finished,
              agent_message,
              agent_thought,
              message_file,
            ]
          description: 事件类型
        task_id:
          type: string
          description: 任务 ID，用于请求跟踪和停止响应接口
        message_id:
          type: string
          description: 消息唯一 ID
        conversation_id:
          type: string
          description: 会话 ID
        workflow_run_id:
          type: string
          description: workflow 执行 ID
        answer:
          type: string
          description: 回复内容
        audio:
          type: string
          description: 语音合成音频数据（base64编码）
        data:
          type: object
          description: 事件相关数据
        metadata:
          type: object
          properties:
            usage:
              $ref: "#/components/schemas/Usage"
            retriever_resources:
              type: array
              items:
                $ref: "#/components/schemas/RetrieverResource"
        created_at:
          type: integer
          description: 创建时间戳
        id:
          type: string
          description: 唯一ID
        position:
          type: integer
          description: agent_thought在消息中的位置
        thought:
          type: string
          description: agent的思考内容
        observation:
          type: string
          description: 工具调用的返回结果
        tool:
          type: string
          description: 使用的工具列表，以 ; 分割多个工具
        tool_input:
          type: string
          description: 工具的输入，JSON格式的字符串
        message_files:
          type: array
          items:
            type: string
          description: 当前agent_thought关联的文件ID
        type:
          type: string
          description: 文件类型
        belongs_to:
          type: string
          description: 文件归属，user或assistant
        url:
          type: string
          description: 文件访问地址

    UploadedFile:
      type: object
      properties:
        id:
          type: string
          description: 文件 ID
        name:
          type: string
          description: 文件名
        size:
          type: integer
          description: 文件大小（byte）
        extension:
          type: string
          description: 文件后缀
        mime_type:
          type: string
          description: 文件 mime-type
        created_by:
          type: string
          description: 上传人 ID
        created_at:
          type: integer
          description: 上传时间

tags:
  - name: Chat
    description: 对话型应用相关操作

paths:
  /chat-messages:
    post:
      tags:
        - Chat
      operationId: sendChatMessageByAppChat
      summary: 发送对话消息(对话型应用)
      description: 创建会话消息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: 用户输入/提问内容
                inputs:
                  type: object
                  description: 允许传入 App 定义的各变量值。inputs 参数包含了多组键值对（Key/Value pairs），每组的键对应一个特定变量，每组的值则是该变量的具体值。默认 {}
                response_mode:
                  type: string
                  enum: [streaming, blocking]
                  description: |
                    响应模式:
                    - streaming: 流式模式（推荐），基于 SSE 实现类似打字机输出
                    - blocking: 阻塞模式，等待执行完毕后返回结果（请求若流程较长可能会被中断）
                    注：Agent模式下不允许blocking
                user:
                  type: string
                  description: 用户标识，用于定义终端用户的身份，方便检索、统计。由开发者定义规则，需保证用户标识在应用内唯一。
                conversation_id:
                  type: string
                  description: （选填）会话 ID，需要基于之前的聊天记录继续对话，必须传之前消息的 conversation_id
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: [image]
                        description: 支持类型：图片 image（目前仅支持图片格式）
                      transfer_method:
                        type: string
                        enum: [remote_url, local_file]
                        description: 传递方式
                      url:
                        type: string
                        description: 图片地址（仅当传递方式为 remote_url 时）
                      upload_file_id:
                        type: string
                        description: 上传文件 ID（仅当传递方式为 local_file 时）
                  description: 上传的文件
                auto_generate_name:
                  type: boolean
                  description: （选填）自动生成标题，默认 true。若设置为 false，则可通过调用会话重命名接口并设置 auto_generate 为 true 实现异步生成标题。
                  default: true
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
                description: 当 response_mode 为 blocking 时，返回 ChatCompletionResponse object
            text/event-stream:
              schema:
                $ref: "#/components/schemas/StreamEvent"
                description: 当 response_mode 为 streaming 时，返回 ChunkChatCompletionResponse object 流式序列
        "400":
          $ref: "#/components/responses/Error400"
        "404":
          $ref: "#/components/responses/Error404"
        "500":
          $ref: "#/components/responses/Error500"

  /conversations:
    get:
      tags:
        - Chat
      operationId: getConversationListByAppChat
      summary: 获取会话列表
      description: 获取当前用户的会话列表
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
        - name: last_id
          in: query
          schema:
            type: string
          description: 当前页最后一条记录的ID
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: 每页记录数
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
            default: -updated_at
          description: 排序字段
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Conversation"
                  has_more:
                    type: boolean
                  limit:
                    type: integer

  /conversations/{conversation_id}:
    delete:
      tags:
        - Chat
      operationId: deleteConversationByAppChat
      summary: 删除会话
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
          description: 会话ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: 用户标识
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]

  /conversations/{conversation_id}/name:
    post:
      tags:
        - Chat
      operationId: renameConversationByAppChat
      summary: 会话重命名
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                name:
                  type: string
                  description: 新名称
                auto_generate:
                  type: boolean
                  default: false
                  description: 是否自动生成
                user:
                  type: string
                  description: 用户标识
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"

  /messages:
    get:
      tags:
        - Chat
      operationId: getConversationMessagesByAppChat
      summary: 获取会话历史消息
      parameters:
        - name: conversation_id
          in: query
          required: true
          schema:
            type: string
        - name: user
          in: query
          required: true
          schema:
            type: string
        - name: first_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChatMessage"
                  has_more:
                    type: boolean
                  limit:
                    type: integer

  /messages/{message_id}/feedbacks:
    post:
      tags:
        - Chat
      operationId: sendMessageFeedbackByAppChat
      summary: 消息反馈
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - user
              properties:
                rating:
                  type: string
                  enum: [like, dislike, null]
                  description: 反馈类型
                user:
                  type: string
                  description: 用户标识
                content:
                  type: string
                  description: 反馈内容
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]

  /messages/{message_id}/suggested:
    get:
      tags:
        - Chat
      operationId: getSuggestedQuestionsByAppChat
      summary: 获取下一轮建议问题列表
      description: 获取下一轮建议问题列表
      parameters:
        - name: message_id
          in: path
          description: Message ID
          required: true
          schema:
            type: string
        - name: user
          in: query
          description: 用户标识，由开发者定义规则，需保证用户标识在应用内唯一。
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 成功获取建议问题列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: 固定返回 success
                  data:
                    type: array
                    description: 建议问题列表
                    items:
                      type: string

  /files/upload:
    post:
      tags:
        - Chat
      operationId: uploadFileByAppChat
      summary: 上传文件
      description: |
        上传文件并在发送消息时使用。
        支持的文件类型取决于应用类型和配置。
        上传的文件仅供当前终端用户使用。
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 要上传的文件
                user:
                  type: string
                  description: 用户标识
              required:
                - file
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadedFile"
        "400":
          $ref: "#/components/responses/Error400"
        "413":
          description: 文件太大
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "415":
          description: 不支持的文件类型
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "503":
          description: 存储服务错误
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /info:
    get:
      tags:
        - Chat
      operationId: getApplicationInfoByAppChat
      summary: 获取应用基本信息
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: 应用名称
                  description:
                    type: string
                    description: 应用描述
                  tags:
                    type: array
                    items:
                      type: string
                    description: 应用标签

  /chat-messages/{task_id}/stop:
    post:
      tags:
        - Chat
      operationId: stopChatResponseByAppChat
      summary: 停止响应
      description: 仅支持流式模式
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
          description: 任务 ID，可在流式返回 Chunk 中获取
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: 用户标识，必须和发送消息接口传入 user 保持一致
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                    description: 固定返回 success

  /audio-to-text:
    post:
      tags:
        - Chat
      operationId: convertAudioToTextByAppChat
      summary: 语音转文字
      description: 语音转文字
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 语音文件
                user:
                  type: string
                  description: 用户标识
              required:
                - file
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: 转换后的文本

  /text-to-audio:
    post:
      tags:
        - Chat
      operationId: convertTextToAudioByAppChat
      summary: 文字转语音
      description: 文字转语音
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message_id:
                  type: string
                  description: Dify 生成的文本消息ID，后台会通过 message_id 查找相应的内容直接合成语音信息。如果同时传 message_id 和 text，优先使用 message_id
                text:
                  type: string
                  description: 语音生成内容。如果没有传 message_id 的话，则会使用这个字段的内容
                user:
                  type: string
                  description: 用户标识，由开发者定义规则，需保证用户标识在应用内唯一
      responses:
        '200':
          description: 成功响应
          content:
            audio/wav:
              schema:
                type: string
                format: binary
                description: 音频文件

  /parameters:
    get:
      tags:
        - Chat
      operationId: getApplicationParametersByAppChat
      summary: 获取应用参数
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  opening_statement:
                    type: string
                    description: 开场白
                  suggested_questions:
                    type: array
                    items:
                      type: string
                    description: 开场推荐问题列表
                  suggested_questions_after_answer:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 回答后推荐问题设置
                  speech_to_text:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 语音转文本设置
                  retriever_resource:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 引用和归属设置
                  user_input_form:
                    type: array
                    items:
                      type: object
                    description: 用户输入表单配置
                  file_upload:
                    type: object
                    description: 文件上传配置
                  system_parameters:
                    type: object
                    description: 系统参数

  /meta:
    get:
      tags:
        - Chat
      operationId: getAppMetaInfoByAppChat
      summary: 获取应用Meta信息
      description: 用于获取工具icon
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  tool_icons:
                    type: object
                    description: 工具图标
                    additionalProperties:
                      oneOf:
                        - type: object
                          properties:
                            background:
                              type: string
                              description: hex格式的背景色
                            content:
                              type: string
                              description: emoji
                        - type: string
                          description: 图标URL

  /apps/annotations:
    get:
      tags:
        - Chat
      operationId: getAnnotationsListByAppChat
      summary: 获取标注列表
      description: 获取应用的标注列表
      parameters:
        - name: page
          in: query
          description: 页码
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: 每页数量
          required: false
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: 成功获取标注列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 标注ID
                        question:
                          type: string
                          description: 问题
                        answer:
                          type: string
                          description: 答案
                        hit_count:
                          type: integer
                          description: 命中次数
                        created_at:
                          type: integer
                          description: 创建时间戳
                  has_more:
                    type: boolean
                    description: 是否有更多数据
                  limit:
                    type: integer
                    description: 每页数量
                  total:
                    type: integer
                    description: 总记录数
                  page:
                    type: integer
                    description: 当前页码

    post:
      tags:
        - Chat
      operationId: createAnnotationByAppChat
      summary: 创建标注
      description: 创建新的标注
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
              properties:
                question:
                  type: string
                  description: 问题
                answer:
                  type: string
                  description: 答案
      responses:
        "200":
          description: 成功创建标注
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 标注ID
                  question:
                    type: string
                    description: 问题
                  answer:
                    type: string
                    description: 答案
                  hit_count:
                    type: integer
                    description: 命中次数
                  created_at:
                    type: integer
                    description: 创建时间戳

  /apps/annotations/{annotation_id}:
    put:
      tags:
        - Chat
      operationId: updateAnnotationByAppChat
      summary: 更新标注
      description: 更新指定的标注
      parameters:
        - name: annotation_id
          in: path
          description: 标注ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
              properties:
                question:
                  type: string
                  description: 问题
                answer:
                  type: string
                  description: 答案
      responses:
        "200":
          description: 成功更新标注
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 标注ID
                  question:
                    type: string
                    description: 问题
                  answer:
                    type: string
                    description: 答案
                  hit_count:
                    type: integer
                    description: 命中次数
                  created_at:
                    type: integer
                    description: 创建时间戳

    delete:
      tags:
        - Chat
      operationId: deleteAnnotationByAppChat
      summary: 删除标注
      description: 删除指定的标注
      parameters:
        - name: annotation_id
          in: path
          description: 标注ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 成功删除标注
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]

  /apps/annotation-reply/{action}:
    post:
      tags:
        - Chat
      operationId: configureAnnotationReplyByAppChat
      summary: 标注回复初始设置
      description: 启用或禁用标注回复功能
      parameters:
        - name: action
          in: path
          description: 动作，只能是 'enable' 或 'disable'
          required: true
          schema:
            type: string
            enum: [enable, disable]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                embedding_model_provider:
                  type: string
                  description: 指定的嵌入模型提供商, 必须先在系统内设定好接入的模型，对应的是provider字段
                embedding_model:
                  type: string
                  description: 指定的嵌入模型，对应的是model字段
                score_threshold:
                  type: number
                  description: 相似度阈值，当相似度大于该阈值时，系统会自动回复，否则不回复
      responses:
        "200":
          description: 成功启用或禁用标注回复
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: 任务ID
                  job_status:
                    type: string
                    description: 任务状态

  /apps/annotation-reply/{action}/status/{job_id}:
    get:
      tags:
        - Chat
      operationId: getAnnotationReplyStatusByAppChat
      summary: 查询标注回复初始设置任务状态
      description: 查询标注回复初始设置任务的执行状态
      parameters:
        - name: action
          in: path
          description: 动作，只能是 'enable' 或 'disable'，并且必须和标注回复初始设置接口的动作一致
          required: true
          schema:
            type: string
            enum: [enable, disable]
        - name: job_id
          in: path
          description: 任务ID，从标注回复初始设置接口返回的job_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 成功获取任务状态
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: 任务ID
                  job_status:
                    type: string
                    description: 任务状态
                  error_msg:
                    type: string
                    description: 错误信息