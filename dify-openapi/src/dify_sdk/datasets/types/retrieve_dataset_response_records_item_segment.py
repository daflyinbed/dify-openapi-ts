# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .retrieve_dataset_response_records_item_segment_document import (
    RetrieveDatasetResponseRecordsItemSegmentDocument,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RetrieveDatasetResponseRecordsItemSegment(UniversalBaseModel):
    id: typing.Optional[str] = None
    position: typing.Optional[int] = None
    document_id: typing.Optional[str] = None
    content: typing.Optional[str] = None
    answer: typing.Optional[str] = None
    word_count: typing.Optional[int] = None
    tokens: typing.Optional[int] = None
    keywords: typing.Optional[typing.List[str]] = None
    index_node_id: typing.Optional[str] = None
    index_node_hash: typing.Optional[str] = None
    hit_count: typing.Optional[int] = None
    enabled: typing.Optional[bool] = None
    disabled_at: typing.Optional[float] = None
    disabled_by: typing.Optional[str] = None
    status: typing.Optional[str] = None
    created_by: typing.Optional[str] = None
    created_at: typing.Optional[float] = None
    indexing_at: typing.Optional[float] = None
    completed_at: typing.Optional[float] = None
    error: typing.Optional[str] = None
    stopped_at: typing.Optional[float] = None
    document: typing.Optional[RetrieveDatasetResponseRecordsItemSegmentDocument] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
