# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class UpdateSegmentRequestSegment(UniversalBaseModel):
    content: typing.Optional[str] = pydantic.Field(default=None)
    """
    Text content/question content
    """

    answer: typing.Optional[str] = pydantic.Field(default=None)
    """
    Answer content (required for Q&A mode)
    """

    keywords: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Keyword list
    """

    enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether enabled
    """

    regenerate_child_chunks: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to regenerate child segments
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
