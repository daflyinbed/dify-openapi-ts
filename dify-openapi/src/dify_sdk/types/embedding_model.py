# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .embedding_model_label import EmbeddingModelLabel
from .embedding_model_icon_small import EmbeddingModelIconSmall
from .embedding_model_icon_large import EmbeddingModelIconLarge
from .embedding_model_models_item import EmbeddingModelModelsItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class EmbeddingModel(UniversalBaseModel):
    provider: typing.Optional[str] = pydantic.Field(default=None)
    """
    Model provider
    """

    label: typing.Optional[EmbeddingModelLabel] = pydantic.Field(default=None)
    """
    Model label
    """

    icon_small: typing.Optional[EmbeddingModelIconSmall] = pydantic.Field(default=None)
    """
    Small icon
    """

    icon_large: typing.Optional[EmbeddingModelIconLarge] = pydantic.Field(default=None)
    """
    Large icon
    """

    status: typing.Optional[str] = pydantic.Field(default=None)
    """
    Status
    """

    models: typing.Optional[typing.List[EmbeddingModelModelsItem]] = pydantic.Field(default=None)
    """
    Model list
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
